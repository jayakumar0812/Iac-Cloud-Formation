Description: Basic CFT Template for creating a VPC with 2 subnets and 2 ec2
  instances with security groups and bastion host.

Parameters:
  #This block defines the parameters that can be passed to the CFT.
  VPCCIDR:
    Type: String
    Default: 10.0.0.0/16 #This contains 65536 IP addresses and more than enough for this example.

  PbSubnet1:
    Type: String
    Default: 10.0.1.0/24 #Cidr block for the public subnet 1

  PriSubnet1:
    Type: String
    Default: 10.0.2.0/24 #Cidr block for the private subnet 1

Resources:
  ec2VPCcft:
    #This block defines the VPC Parameters of the ec2 instance.
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR #Parameter reference to the VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Ec2-cft-vpc

  PublicSubnet1cft:
    Type: AWS::EC2::Subnet #Public Subnet Configuration
    Properties:
      VpcId: !Ref ec2VPCcft
      CidrBlock: !Ref PbSubnet1
      AvalabilityZone: !Select [ 0, !GetAZs ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PubicSubenet1

  PrivateSubnet1cft:
    Type: AWS::EC2::Subnet #Private Subnet Configuration
    Properties:
      VpcId: !Ref ec2VPCcft
      Cidrblock: !Ref PriSubnet1
      MapPublicIpOnLaunch: false
      AvalabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: PrivateSubnet1

  NatGatewayEIPcft: #Elastic IP for the NAT Gateway
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  AttachNatGatewaycft: #NAT Gateway Configuration
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIPcft. AllocationId
      SubnetId: !Ref PublicSubnet1cft

  Igwec2cft: #Internet Gateway Configuration
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Ec2-cft-IGW

  IgwAttachmentec2cft: #Internet Gateway Attachment
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref ec2VPCcft
      InterGatewayId: !Ref Igwec2cft

  Publicrtec2cft: #Public Route Table Configuration
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ec2VPCcft
      Tags:
        - Key: Name
          Value: PublicRouteTable_cft

  PublicrtDefault: #Default Route Configuration Public
    Type: AWS::EC2::Route
    DependsOn: IgwAttachmentec2cft
    Properties:
      RouteTableId: !Ref Publicrtec2cft
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igwec2cft

  AssocPublicSubnet1ec2cft: #Public Subnet Association
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1cft
      RouteTableId: !Ref Publicrtec2cft

  Privatertec2cft: #Private Route Table Configuration
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ec2VPCcft
      Tags:
        - Key: Name
          Value: Privatertec2cft

  PrivatertDefault: #Default Route Configuration Private
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref Privatertec2cft
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref AttachNatGatewaycft

  AssocPrivateSubnet1ec2cft: #Private Subnet Association
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1cft
      RouteTableId: !Ref Privatertec2cft